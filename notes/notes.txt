尽量使用while 替代 for()

>>>0 作用: 无符号右移   相当于 逻辑右移
1.所有非数值转换成0
2.所有大于等于 0 数取整数部分

>>>1
1.非数值转为 0
2.正数时, 相当于 val/2 然后取整数部分
3.负数时, 转为很大的正数


x = 101101
x逻辑右移2位：001011
x算术右移2位：111011


一下三条语句的效率是: x = x + 1 <  x += 1  < x++

call 在大多数情况下比 apply性能好

var _has = {}.hasOwnProperty;
if(_has.call(obj, 'xxx')) //查看某个对象上是否有xxx属性

跳过了 _.findIndex和 _.findLastIndex 
******************看到_.first  方法  2015年10月25日00:44:25

$.type()  jquery 获取数据类型

/============
function(a){}.length   // 1
function(a, b){}.length   // 2
note: 函数的 length 得到的是形参个数     ||   arguments.length   得到实参个数

跳过了 _.intersection

*****************_.pull 方法 2015年10月26日00:19:39

 
*****************_.remove 2015年10月28日00:04:07


*****************_.takeWhile 2015年10月29日00:06:05

*****************_.where 2015年10月31日22:18:45

只有函数被调用时,arguments对象才会被创建,未调用时其值为 null
函数 arguments 保存实参

在一个函数调用另一个函数时,被调用的函数会自动生成一个caller属性,指向调用它的函数对象.
如果该函数当前未被调用,或并非被其他函数调用,则caller为null
function testCaller() {
	var caller = testCaller.caller;
	alert(caller);
}
function aCaller() {
	testCaller();
}
aCaller();
弹窗会弹出 aCaller()函数的源码

当函数被调用时,它的arguments.callee对象就会指向自身,也就是一个对自己的引用. (多用于函数递归)
因为arguments是在函数调用时才有效,因此函数未调用时, arguments.callee为null

/=======================================

window.location 属性:
hash : #号开始的url
host : 主机名和当前url的端口号
hostname :主机名
href: 完整的url
pathname: 当前url的路径部分, / 斜杠部分
port: 端口号
protocol: url协议
search: ?号开始的url

js正则函数详细使用 没理清
页面宽度, div宽度等获取 浏览器差异没理清

=======================================/




*****************_.isArguments 2015年11月02日23:23:16
*****************_.add 2015年11月6日00:08:12

vue.js 笔记

实例属性: http://cn.vuejs.org/api/instance-properties.html
实例方法: http://cn.vuejs.org/api/instance-methods.html
全局api: http://cn.vuejs.org/api/global-api.html
组件选项: http://cn.vuejs.org/api/options.html

注意: 以 _ 或 $ 开头的属性将不会被代理在 Vue 实例上



//===============================
需要买的东西列单:

(手机)
办公室面纸


//============================


vue.js 看到条件渲染  2015年11月6日23:36:56

vue 指令只封装 DOM 操作，而组件代表一个自给自足的独立单元


vue.js 看到过渡  2015年11月8日22:34:47

//=================================
ES5中新增了写数组方法，如下：
forEach (js v1.6)
map (js v1.6)
filter (js v1.6)
some (js v1.6)
every (js v1.6)
indexOf (js v1.6)
lastIndexOf (js v1.6)
reduce (js v1.8)
reduceRight (js v1.8)

url: http://www.zhangxinxu.com/wordpress/2013/04/es5新增数组方法/


看到vue-test4.html结束
vue.js 看到过渡  2015年11月15日23:49:47

有很多函数式库：underscore.js， lodash，Fantasy Land, Functional.js, Bilby.js, fn.js, Wu.js, Lazy.js, Bacon.js, sloth.js, stream.js, Sugar, Folktale, RxJs 

多种javascript变成方式:
命令式编程: 是建立在直接操作和检查程序状态之上.
面向原型的面向对象编程: 利用现有的对象作为原型来生成特定的实例
元编程: 编写代码叫做编程,当你的代码改变了某些代码被解释的方式. call apply时